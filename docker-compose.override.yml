version: '3.1'
services:
    db:
        image: postgres
        restart: always
        volumes:
            - db-data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        #env_file: .env
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - POSTGRES_DB
    adminer:
        image: adminer
        restart: always
        ports:
            - "8080:8080"
    web:
        #build:
        #    context: .
        #    dockerfile: Dockerfile.dev
        command: bundle exec rails s -p 3000 -b '0.0.0.0'
        volumes:
            - .:/app
        ports:
            - "3000:3000"
        depends_on:
            - db
        #env_file: .env
        environment:
            - RAILS_ENV=${RAILS_ENV:-development}
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - POSTGRES_DB

#proposed:
#dev:
#docker-compose build 
#docker-compose up 

#prod:
#build and push: 
#export RAILS_ENV=production
#optionally specify the version of the stack to build/push (defaults to latest):
#export FXDATA_VERSION=0.1.0
#docker-compose -f docker-compose.yml build
#docker-compose -f docker-compose.yml push
#deploy: 
#export RAILS_ENV=production
#optionally specify the version of the stack to build/push (defaults to latest):
#export FXDATA_VERSION=0.1.0
#docker stack deploy fxdata-stack --compose-file docker-compose.yml --with-registry-auth




#ran:
#docker-compose -f docker-compose-dev.yml build
#POSTGRES_PASSWORD=fxdata FX_DEV_DB_PASS=fxdata docker-compose -f docker-compose-dev.yml up
#POSTGRES_PASSWORD=fxdata FX_DEV_DB_PASS=fxdata docker-compose -f docker-compose-dev.yml run web rake db:create
#POSTGRES_PASSWORD=fxdata FX_DEV_DB_PASS=fxdata docker-compose -f docker-compose-dev.yml run web rake db:migrate

#run
#docker swarm init
#POSTGRES_PASSWORD=mysecret docker stack deploy -c docker-compose-dev.yml fx-data

#connect to db from another window:
#psql -h localhost -U fxdata fxdatasecret
